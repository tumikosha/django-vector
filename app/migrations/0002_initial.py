# Generated by Django 4.1.3 on 2023-12-09 22:06

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import pgvector.django
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('app', '0001_vector'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('blocked', models.BooleanField(default=False)),
                ('domain', models.TextField(null=True)),
                ('name', models.TextField(null=True)),
                ('title', models.TextField(null=True)),
                ('description', models.TextField(null=True)),
                ('full_txt', models.TextField(null=True)),
                ('summary', models.TextField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('first_indexed', models.DateTimeField(auto_now_add=True)),
                ('embedding', pgvector.django.VectorField(dimensions=384, null=True)),
                ('sales_revenue', models.CharField(max_length=12, null=True)),
                ('revenue', models.CharField(max_length=12, null=True)),
                ('employees', models.IntegerField(null=True)),
                ('industry', models.TextField(null=True)),
                ('logo', models.TextField(null=True)),
                ('linkedin', models.TextField(null=True)),
                ('facebook', models.CharField(max_length=40, null=True)),
                ('youtube', models.TextField(null=True)),
                ('vimeo', models.TextField(null=True)),
                ('vk', models.CharField(max_length=40, null=True)),
                ('instagram', models.CharField(max_length=40, null=True)),
                ('google', models.CharField(max_length=40, null=True)),
                ('threads', models.CharField(max_length=40, null=True)),
                ('twitter', models.CharField(max_length=40, null=True)),
                ('github', models.TextField(null=True)),
                ('calendly', models.JSONField(null=True)),
                ('calendly_acc_num', models.IntegerField(default=None, null=True)),
                ('calendly_events_num', models.IntegerField(default=None, null=True)),
                ('calendly_open_days_num', models.IntegerField(default=None, null=True)),
                ('emails', models.TextField(null=True)),
                ('emails_json', models.JSONField(null=True)),
                ('phones', models.TextField(max_length=40, null=True)),
                ('phones_json', models.JSONField(null=True)),
                ('zip', models.CharField(max_length=8, null=True)),
                ('city', models.CharField(max_length=40, null=True)),
                ('country', models.CharField(max_length=8, null=True)),
                ('state', models.CharField(max_length=8, null=True)),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Snippet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('code', models.TextField()),
                ('result', models.TextField(null=True)),
                ('have_error', models.BooleanField(default=False)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['created'],
            },
        ),
        migrations.AddIndex(
            model_name='company',
            index=pgvector.django.IvfflatIndex(fields=['embedding'], lists=100, name='company_ivff_index', opclasses=['vector_l2_ops']),
        ),
        migrations.AddIndex(
            model_name='company',
            index=pgvector.django.HnswIndex(ef_construction=64, fields=['embedding'], m=16, name='company_hnsv_index', opclasses=['vector_l2_ops']),
        ),
    ]
